# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs every hour
  schedule:
    - cron: '*/10 * * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.check.outputs.changes_detected }}
    env:
      GCS_BUCKET: ukulele-tuesday-songbooks
    steps:
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Disable gcloud authentication
        run: gcloud config set auth/disable_credentials True

      - name: Decide whether to build
        id: check
        run: |
          set -x
          if [[ "${{ github.event_name }}" != "schedule" ]]; then
            echo "Build triggered by push or manual dispatch. Proceeding."
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Build triggered by schedule. Checking for recent changes in GCS."
          CUTOFF_TIME=$(date -u -d '15 minutes ago' +%s)
          GCS_PATH="gs://${GCS_BUCKET}/"

          GCS_LIST_JSON=$(gcloud storage ls "$GCS_PATH**" --json)
          if [[ $? -ne 0 ]]; then
              echo "::error::'gcloud storage ls' command failed."
              exit 1
          fi

          LAST_UPDATED_STR=$(echo "$GCS_LIST_JSON" | jq -r '.[].metadata.updated' | sort -r | head -n 1)
          if [[ -z "$LAST_UPDATED_STR" || "$LAST_UPDATED_STR" == "null" ]]; then
            echo "No files found in GCS bucket. No changes detected."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          LAST_UPDATED_TS=$(date -u -d "$LAST_UPDATED_STR" +%s)
          if [[ $? -ne 0 ]]; then
            echo "::error::Failed to parse timestamp '$LAST_UPDATED_STR'."
            exit 1
          fi

          if [[ "$LAST_UPDATED_TS" -gt "$CUTOFF_TIME" ]]; then
            echo "Found recent changes. Last update at $LAST_UPDATED_STR. Proceeding."
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "No recent changes detected. Last update at $LAST_UPDATED_STR. Skipping deployment."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

  # Build and deploy job
  deploy:
    if: needs.check-for-changes.outputs.changes_detected == 'true'
    needs: check-for-changes
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
      GCS_BUCKET: ukulele-tuesday-songbooks
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: uv sync

      - name: Generate website
        run: uv run main.py

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload public directory
          path: 'public'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
